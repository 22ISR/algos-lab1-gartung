"""
 _____         _      __  
|_   _|       | |    /  | 
  | | __ _ ___| | __ `| | 
  | |/ _` / __| |/ /  | | 
  | | (_| \__ \   <  _| |_
  \_/\__,_|___/_|\_\ \___/

Напишите программу, которая выводит в консоль "Hello world"

hint: что такое print?
"""

# print("Hello world")

"""
 _____         _      _____ 
|_   _|       | |    / __  \
  | | __ _ ___| | __ `' / /'
  | |/ _` / __| |/ /   / /  
  | | (_| \__ \   <  ./ /___
  \_/\__,_|___/_|\_\ \_____/

Напишите рограмму, которая выводит числа от 1 до введенного пользователем. Для чисел, кратных 3, выводится "Fizz",'
для кратных 5 — "Buzz", а для чисел, кратных 3 и 5 — "FizzBuzz"

hint: цикл, если и "%"
"""
# запрос числа у пользователя
# n = int(input("Введите число: "))

# проход по всем числам от 1 до n
# for i in range(1, n + 1):
   # if i % 3 == 0 and i % 5 == 0:
    #    print("FizzBuzz")
    # elif i % 3 == 0:
     #   print("Fizz")
    # elif i % 5 == 0:
       # print("Buzz")
    # else:
     #   print(i)

"""
 _____         _      _____ 
|_   _|       | |    |____ |
  | | __ _ ___| | __     / /
  | |/ _` / __| |/ /     \ \
  | | (_| \__ \   <  .___/ /
  \_/\__,_|___/_|\_\ \____/ 

Напишите программу, которая проверяет, является ли введенный пользователем год високосным

hint: https://ru.wikihow.com/%D0%B2%D1%8B%D1%81%D1%87%D0%B8%D1%82%D1%8B%D0%B2%D0%B0%D1%82%D1%8C-%D0%B2%D0%B8%D1%81%D0%BE%D0%BA%D0%BE%D1%81%D0%BD%D1%8B%D0%B5-%D0%B3%D0%BE%D0%B4%D1%8B
"""

# def is_leap_year(year):
    # год является високосным, если:
    # 1. он делится на 4.
    # 2. но не делится на 100, если только он не делится на 400.
 #   return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0)

# запрашиваем у пользователя ввод года
#year_input = int(input("Введите год: "))

#if is_leap_year(year_input):
 #   print(f"{year_input} является високосным годом.")
#else:
 #   print(f"{year_input} не является високосным годом.")

"""
 _____         _        ___ 
|_   _|       | |      /   |
  | | __ _ ___| | __  / /| |
  | |/ _` / __| |/ / / /_| |
  | | (_| \__ \   <  \___  |
  \_/\__,_|___/_|\_\     |_/

Напишите программау, которая проверяет, является ли введенная пользователем строка или число палиндромом, то есть читается ли оно одинаково с обеих сторон

hint: https://letpy.com/handbook/builtins/reversed/
"""

#def is_palindrome(value):
    # приводим к строке и удаляем пробелы
 #   value_str = str(value).replace(" ", "").lower()
    # сравниваем строку с её обратной версией
 #   return value_str == value_str[::-1]

# запрашиваем ввод у пользователя
#user_input = input("Введите строку или число: ")

# проверяем, является ли ввод палиндромом
 # if is_palindrome(user_input):
 #   print("Это палиндром!")
# else:
 #   print("Это не палиндром.")

"""
 _____         _      _____ 
|_   _|       | |    |  ___|
  | | __ _ ___| | __ |___ \ 
  | |/ _` / __| |/ /     \ \
  | | (_| \__ \   <  /\__/ /
  \_/\__,_|___/_|\_\ \____/ 

Напишите программу, которая запрашивает число у пользователя и вычисляет факториал заданного числа, используя цикл или рекурсию

hint: https://ru.wikipedia.org/wiki/%D0%A4%D0%B0%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%B0%D0%BB
"""
# с помощью цикла
# def factorial_iterative(n):
 #   if n < 0:
  #      return "факториал не определен для отрицательных чисел."
  #  result = 1
  #  for i in range(1, n + 1):
  #      result *= i
  #  return result

# number = int(input("введите число для вычисления факториала: "))
# print(f"факториал числа {number} равен {factorial_iterative(number)}")

"""
 _____         _       ____ 
|_   _|       | |     / ___|
  | | __ _ ___| | __ / /___ 
  | |/ _` / __| |/ / | ___ \
  | | (_| \__ \   <  | \_/ |
  \_/\__,_|___/_|\_\ \_____/

Напишите программу, которая проверяет, является ли число простым (делится только на 1 и само на себя). Используйте перебор делителей.

hint: x <= 1 - не простые числа
hint 2: %
"""

#def is_prime(n):
    # проверяем числа меньше или равные 1
   # if n <= 1:
    #    return False
    # проверяем делители от 2 до квадратного корня из n
  #  for i in range(2, int(n**0.5) + 1):
   #     if n % i == 0:
    #        return False
   # return True

# number = int(input("введите число для проверки на простоту: "))
# if is_prime(number):
 #   print(f"число {number} является простым.")
# else:
 #   print(f"число {number} не является простым.")

"""
 _____         _      ______
|_   _|       | |    |___  /
  | | __ _ ___| | __    / / 
  | |/ _` / __| |/ /   / /  
  | | (_| \__ \   <  ./ /   
  \_/\__,_|___/_|\_\ \_/    

Напишите программу, которая находит сумму всех цифр числа

hint: циклы
"""

#n = int(input("введите число:"))
#tot = 0
# while(n > 0):
  #  dig = n % 10
  #  tot = tot + dig
 #   n = n//10
# print("сумма цифр равна:", tot)

"""
 _____         _      _____ 
|_   _|       | |    |  _  |
  | | __ _ ___| | __  \ V / 
  | |/ _` / __| |/ /  / _ \ 
  | | (_| \__ \   <  | |_| |
  \_/\__,_|___/_|\_\ \_____/

Напишите программу, которая генерирует последовательность Фибоначчи до указанного числа или количества элементов

hint: 1, 1, 2, 3 https://ru.wikipedia.org/wiki/%D0%A7%D0%B8%D1%81%D0%BB%D0%B0_%D0%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8
hint 2: попробуйте решить с помощью рекурсии
"""
# до указанного числа с использованием рекурсии
#def fibonacci(n, sequence=None):
 #   if sequence is None:
 #       sequence = []

    # базовые случаи
 #   if n < 0:
 #       return sequence
#    elif n == 0:
  #      sequence.append(0)
  #  elif n == 1:
 #       sequence.extend([0, 1])
 #   else:
 #       # проверяем, если текущий элемент уже есть в последовательности
 #       if len(sequence) < 2:
 #           fibonacci(n - 1, sequence)
        # добавляем следующий элемент последовательности
  #      next_fib = sequence[-1] + sequence[-2]
 #       if next_fib <= n:
 #           sequence.append(next_fib)
 #           fibonacci(next_fib, sequence)

 #   return sequence

# основной блок программы
# max_value = int(input("введите максимальное значение: "))
# result = fibonacci(max_value)

# print("последовательность Фибоначчи до", max_value, ":", result)








